import 'dart:convert';

import 'package:get/get.dart';
import 'package:http/http.dart' as http;
import 'package:shared_preferences/shared_preferences.dart';
import 'package:welcome_screen/Model/course_model.dart';

import '../constant/app_color.dart';
import '../main.dart';

class CoursesController extends GetxController{
  bool isProgress=false;
  bool internetIssue=false;

  int idCourseClicked=0;
  int indexCourseClicked=0;

  List availableCourses = <Autogenerated>[];
  late int statusCode;

  Autogenerated course=Autogenerated();
  Future<void> fetchDataFromAPI() async {
    try {
      isProgress=true;
      update();
      SharedPreferences pref = await SharedPreferences.getInstance();
      String? accessToken = pref.getString("accessToken");
      final String apiUrl = 'https://rehla1-873faca9e6cc.herokuapp.com/courses';
      final response = await http.get(Uri.parse(apiUrl), headers: {
        'Authorization': 'Bearer $accessToken',
      });

      // Check if the request was successful (status code 200)
      if (response.statusCode == 200) {
        internetIssue=false;
        final List<dynamic> jsonData = json.decode(utf8.decode(response.bodyBytes));
        print(response.statusCode);

        List<Autogenerated> courses = jsonData.map((courseData) {
          return Autogenerated.fromJson(courseData);
        }).toList();

        availableCourses= courses ;
        //print(availableCourses[0].exam[0].courseName);
        statusCode=response.statusCode;
        // print(courses[0].courseVideos!.length);
        // print(courses[0].courseVideos!.length);


        isProgress=false;
        update();
      }
      else {
        internetIssue=false;
        final jsonData = json.decode(response.body);
        print(response.statusCode);
        print(jsonData);
        availableCourses=[];
        statusCode=response.statusCode;
        isProgress=false;
        update();

      }
    } catch (e) {
      internetIssue=true;

      // Handle any exceptions that may occur during the request or timeout
      print('Request failed with error: $e');
      isProgress=false;
      update();

    }



    print("Course $internetIssue");


  }

  @override
  void onInit() {
    // TODO: implement onInit
    fetchDataFromAPI();
    int timestampInSeconds = 1693639476;
    DateTime dateTime = DateTime.fromMillisecondsSinceEpoch(timestampInSeconds * 1000);

    print(dateTime.toString().split(" ")[0]); // This will print the formatted date and time

    super.onInit();
  }

  
}